1. action 用 const add =(id)=>（{type,id}） function的方式创建一个 action
2. reducer 用方法获得state 和 type 来return  一定是pure function 不改变state 不用全局变量，不用Math Data.now这种随机方法
const reducer =(state=100,action){ if type==='ADD' return state+1
3.用store  createStore 创建store 同调用reducer  用dispatch 方法 
const store= createStore(reducer, applyMiddleWare(thunk))  store.dispatch(add())   用store.getState() 获得state数值
store.subscribe(()=>{}) 只要state 变化，这个callback函数就会执行

react render UI
redux 管理state

react-redux
root 组件需要<Provider store={store}> 包裹起来
useStore() 创建store对象
useSelector () 可以直接得到store里的数据  const state =useSelector((state)=>state.xx)  导致组件更新 
useDispatch() call 方法 action
多个reducer 同时导出，用combineReducers(user, money ) 2个reducer    导出const money =useSelector (（state）=>state.money)
