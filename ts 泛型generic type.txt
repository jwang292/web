泛型 generic type
function fn <Type> (value:Type):Type{}
<Type extends HTMLElement> 可以缩小范围
多个generic type 
function getProperty<Type, Key extends keyof Type>(obj:Type,key:Key){   //keyof可以获得一个类型/接口所有的key的联合类型
return obj[key]
}
const user={name:'zs',age:18}
getProperty(user,'name')

Partial //所有属性变成可选
type User ={
name: string
age:number
gender:string
}
type PartialUser = Partial<User>

ReadOnly  //所有属性变成只读，不可以更改属性
type ReadonlyUser=Readonly<User> 

Pick<Type,Keys> 从Type中选择一组属性来构造新类型
type User ={
name: string
age:number
gender:string
}
type PickUser =Pick<User, 'name'|'age'> //选取name 和age

Omit 和Pick相反没事剔除
type OmitUser = Omit<User, 'gender'>  //排除gender

